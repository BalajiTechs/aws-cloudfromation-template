---
AWSTemplateFormatVersion: 2010-09-09
Description: Creates 4 AMI (RedHat, AmazonLinux2, Ubuntu and SLES) from custom degraded AMIs. This template creates a user, a group for normal user and an admin group. It outputs the AccessKey and SecretKey for newly created user

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  Password:
    NoEcho: 'true'
    Type: String
    Description: IAM new user account password
    MinLength: '1'
    MaxLength: '10'
    ConstraintDescription: the password must be between 1 and 8 characters

Resources:
  CFNUser: # a IAM user with autogenerated username. Password to be speficied while creating the stack
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password:
          Ref: Password
  CFNUserGroup: #creating a group with autogenerated group name. This group will have view users previledges on resources
    Type: AWS::IAM::Group
  CFNAdminGroup: #creating another Group with autogenerated name. This will be provisioned to administrative previledges
    Type: AWS::IAM::Group
  Users:  #adding newly added user to CFNUserGroup
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName:
        Ref: CFNUserGroup
      Users:
      - Ref: CFNUser
  Admins: #adding newly added user to CFNAdminGroup
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName:
        Ref: CFNAdminGroup
      Users:
      - Ref: CFNUser
  CFNUserPolicies: #policies for CFNUsersGroup
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CFNUsers
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - cloudformation:Describe*
          - cloudformation:List*
          - cloudformation:Get*
          Resource: "*"
      Groups:
      - Ref: CFNUserGroup
  CFNAdminPolicies: #policies for CFNAdminGroup
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CFNAdmins
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: cloudformation:*
          Resource: "*"
      Groups:
      - Ref: CFNAdminGroup
  CFNKeys: #Accesskey for newly created user
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        Ref: CFNUser

  AmazonLinux2AMI:
    Type: 'AWS::EC2::Instance'     
    Properties:
      ImageId: ami-09c209f191d595f71
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref MySecurityGroup
      KeyName: !Ref KeyName

  RedHatEnterpriseLinux:
    Type: 'AWS::EC2::Instance'     
    Properties:
      ImageId: ami-0762767a96fd53c74
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref MySecurityGroup
      KeyName: !Ref KeyName

  SUSELinuxEnterpriseServer:
    Type: 'AWS::EC2::Instance'     
    Properties:
      ImageId: ami-01ff96abd32579da9
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref MySecurityGroup
      KeyName: !Ref KeyName

  UbuntuServer:
    Type: 'AWS::EC2::Instance'     
    Properties:
      ImageId: ami-0ca6b0ada262b9306
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref MySecurityGroup
      KeyName: !Ref KeyName     

  MySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP and SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

Outputs:
  AccessKey:
    Value:
      Ref: CFNKeys
    Description: AWSAccessKeyId of new user
  SecretKey:
    Value:
      Fn::GetAtt:
      - CFNKeys
      - SecretAccessKey
    Description: AWSSecretKey of new user